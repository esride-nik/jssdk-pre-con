import{d8 as l,gq as s,gn as t,gr as p,gs as w,bq as m,b2 as g}from"./index-a1cac181.js";import{h as b}from"./ElevationInfo-1c41bf4e.js";function v(i){if(!i)return i;const{start:e,end:n}=i;return new l({start:e!=null?s(e,-e.getTimezoneOffset(),"minutes"):e,end:n!=null?s(n,-n.getTimezoneOffset(),"minutes"):n})}function j(i){if(!i)return i;const{start:e,end:n}=i;return new l({start:e!=null?s(e,e.getTimezoneOffset(),"minutes"):e,end:n!=null?s(n,n.getTimezoneOffset(),"minutes"):n})}const O={type:Boolean,value:!0,json:{origins:{service:{read:!1,write:!1},"web-map":{read:!1,write:!1}},name:"screenSizePerspective",write:{enabled:!0,layerContainerTypes:t}}},C={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader:(i,e)=>!e.disablePopup},write:{enabled:!0,writer(i,e,n){e[n]=!i}}}},D={type:Boolean,value:!0,nonNullable:!0,json:{name:"showLabels",write:{enabled:!0,layerContainerTypes:t}}},S={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:w}}},N={type:Boolean,value:!0,nonNullable:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:{enabled:!0,layerContainerTypes:t}}},h={value:null,type:b,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:{enabled:!0,layerContainerTypes:t}}};function x(i){return{type:i,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const u={write:{enabled:!0,layerContainerTypes:t},read:!0},c={type:Number,json:{origins:{"web-document":u,"portal-item":{write:!0}}}},z={...c,json:{...c.json,origins:{"web-document":{...u,write:{enabled:!0,layerContainerTypes:t,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader:(i,e,n)=>{var a;return n&&n.origin!=="service"||!e.drawingInfo||e.drawingInfo.transparency===void 0?(a=e.layerDefinition)!=null&&a.drawingInfo&&e.layerDefinition.drawingInfo.transparency!==void 0?p(e.layerDefinition.drawingInfo.transparency):void 0:p(e.drawingInfo.transparency)}}}},R={type:l,readOnly:!0,get(){var d,f;if(!((d=this.layer)!=null&&d.timeInfo))return null;const{datesInUnknownTimezone:i,timeOffset:e,useViewTime:n}=this.layer,a=(f=this.view)==null?void 0:f.timeExtent;let o=this.layer.timeExtent;i&&(o=j(o));let r=n?a&&o?a.intersection(o):a||o:o;if(!r||r.isEmpty||r.isAllTime)return r;e&&(r=r.offset(-e.value,e.unit)),i&&(r=v(r));const y=this._get("timeExtent");return r.equals(y)?y:r}},E={type:m,readOnly:!0,json:{origins:{service:{read:{source:["fullExtent","spatialReference"],reader:(i,e)=>{const n=m.fromJSON(i);return e.spatialReference!=null&&typeof e.spatialReference=="object"&&(n.spatialReference=g.fromJSON(e.spatialReference)),n}}}},read:!1}},q={type:String,json:{origins:{service:{read:!1},"portal-item":{read:!1}}}},B={type:Number,json:{origins:{service:{write:{enabled:!1}},"web-scene":{name:"layerDefinition.minScale",write:{enabled:!0,layerContainerTypes:t}}},name:"layerDefinition.minScale",write:!0}},P={type:Number,json:{origins:{service:{write:{enabled:!1}},"web-scene":{name:"layerDefinition.maxScale",write:{enabled:!0,layerContainerTypes:t}}},name:"layerDefinition.maxScale",write:!0}},J={json:{write:{ignoreOrigin:!0,layerContainerTypes:t},origins:{"web-map":{read:!1,write:!1}}}};export{J as C,q as I,P as S,B as T,z as b,N as c,S as d,h as f,c as g,R as j,D as m,O as p,E as v,x as w,C as y};
