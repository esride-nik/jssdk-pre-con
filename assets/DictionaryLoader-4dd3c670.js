import{bE as P,ba as I,bF as L,bt as v,b7 as S,bG as M,bH as R,aq as N,bI as F,bJ as T,bK as q}from"./index-a1cac181.js";import{Z as x}from"./FieldsIndex-6b49ca64.js";import"./UnknownTimeZone-ab7c6b01.js";const w="esri.renderers.support.DictionaryLoader",$={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class U{constructor(t,s,o){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new P(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=t,this.config=s,this.fieldMap=o}getSymbolFields(){return this._symbolFields}async getSymbolAsync(t,s){let o;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(s));try{o=await this._dictionaryPromise}catch(i){if(I(i))return this._dictionaryPromise=null,null}const e=this._dictionaryVersion&&this._dictionaryVersion.since(4,0),l={};if(this.fieldMap)for(const i of this._symbolFields){const n=this._getFieldName(this.fieldMap[i]);if(n){const h=t.attributes[n];l[i]=e?h:h!=null?""+t.attributes[n]:""}else l[i]=""}let a=null;try{a=o==null?void 0:o(l,s)}catch{return null}if(!a||typeof a!="string")return null;const u=L(a).toString(),c=this._symbolCache.get(u);if(c)return c.catch(()=>{this._symbolCache.pop(u)}),c;const g=a.split(";"),y=[],f=[];for(const i of g)if(i)if(i.includes("po:")){const n=i.substr(3).split("|");if(n.length===3){const h=n[0],b=n[1];let m=n[2];if(b==="DashTemplate")m=m.split(" ").map(d=>Number(d));else if(b==="Color"){const d=new v(m).toRgba();m=[d[0],d[1],d[2],255*d[3]]}else m=Number(m);f.push({primitiveName:h,propertyName:b,value:m})}}else if(i.includes("|")){for(const n of i.split("|"))if(this._itemNames.has(n)){y.push(n);break}}else this._itemNames.has(i)&&y.push(i);const _=t.geometry==null||!t.geometry.hasZ&&t.geometry.type==="point",r=this._cimPartsToCIMSymbol(y,f,_,s);return this._symbolCache.put(u,r,1),r}async fetchResources(t){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void S.getLogger(w).error("no valid URL!");const s=M(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:t!=null?t.signal:null}),[{data:o}]=await Promise.all([s,R()]);if(!o)throw this._dictionaryPromise=null,new N("esri.renderers.DictionaryRenderer","Bad dictionary data!");const{authoringInfo:e,dictionary_version:l,expression:a,itemsNames:u}=o,c=a;let g=!1;l&&(this._dictionaryVersion=F.parse(l),g=this._dictionaryVersion.since(4,0)),this._refSymbolUrlTemplate=this.url+"/"+o.cimRefTemplateUrl,this._itemNames=new Set(u),this._symbolFields=e.symbol;const y={};if(this.config){const r=this.config;for(const i in r)y[i]=r[i]}if(e.configuration)for(const r of e.configuration)y.hasOwnProperty(r.name)||(y[r.name]=r.value);const f=[];if(t!=null&&t.fields&&this.fieldMap)for(const r of this._symbolFields){const i=this.fieldMap[r],n=t.fields.filter(h=>h.name.toLowerCase()===(i==null?void 0:i.toLowerCase()));n.length>0&&f.push({...n[0],type:g?n[0].type:"esriFieldTypeString"})}f.length>0&&(this._fieldIndex=new x(f));const _=T(c,t!=null?t.spatialReference:null,f,y).then(r=>{const i={scale:0};return(n,h)=>{if(r==null)return null;const b=r.repurposeFeature({geometry:null,attributes:n});return i.scale=h!=null?h.scale??void 0:void 0,r.evaluate({$feature:b,$view:i},r.services)}}).catch(r=>(S.getLogger(w).error("Creating dictinoary expression failed:",r),null));return this._dictionaryPromise=_,_}async _cimPartsToCIMSymbol(t,s,o,e){const l=new Array(t.length);for(let c=0;c<t.length;c++)l[c]=this._getSymbolPart(t[c],e);const a=await Promise.all(l),u=this.fieldMap;if(u)for(const c of a)C(c,u);return new q({data:this._combineSymbolParts(a,s,o)})}async _getSymbolPart(t,s){if(this._ongoingRequests.has(t))return this._ongoingRequests.get(t).then(l=>l.data);const o=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,t),e=M(o,{responseType:"json",query:{f:"json"},...s});this._ongoingRequests.set(t,e);try{return(await e).data}catch(l){throw this._ongoingRequests.delete(t),l}}_combineSymbolParts(t,s,o){if(!t||t.length===0)return null;const e={...t[0]};if(t.length>1){e.symbolLayers=[];for(const l of t){const a=l;e.symbolLayers.unshift(...a.symbolLayers)}}return o&&(e.callout=$),{type:"CIMSymbolReference",symbol:e,primitiveOverrides:s}}_getFieldName(t){if(this._fieldIndex!==null){const s=this._fieldIndex.get(t);return s?s.name:t}return t}}function C(p,t){if(!p)return;const s=p.symbolLayers;if(!s)return;let o=s.length;for(;o--;){const e=s[o];e&&e.enable!==!1&&e.type==="CIMVectorMarker"&&j(e,t)}}function j(p,t){const s=p.markerGraphics;if(s)for(const o of s){if(!o)continue;const e=o.symbol;if(e)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":C(e,t);break;case"CIMTextSymbol":e.fieldMap=t}}}export{U as DictionaryLoader};
