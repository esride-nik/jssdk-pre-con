import{hm as O,b2 as D,hn as P,ho as E,ca as z,hp as G,hq as H,hr as A,hs as B,bH as J}from"./index-a1cac181.js";import{u as N}from"./elevationInfoUtils-38658fef.js";async function k(a,d,p,l,s){const{elevationProvider:u,renderCoordsHelper:i}=a,{elevationInfo:h}=d,{pointsInFeatures:w,spatialReference:g}=l,m=D.fromJSON(g),y=P(h,!0),I=await E(y,m,s);z(s);const c=[],e=new Set,t=new Set;f.spatialReference=m;const o=a.elevationProvider.spatialReference??a.spatialReference;for(const{objectId:n,points:r}of w){const b=p(n);if(b==null){for(const R of r)c.push(R.z??0);e.add(n);continue}b.isDraped&&t.add(n);const q=b.graphic.geometry;S.setFromElevationInfo(N(q,h)),S.updateFeatureExpressionInfoContext(I,b.graphic,d);for(const{x:R,y:C,z:F}of r)f.x=R,f.y=C,f.z=F??0,await G(f,j,o,0,{signal:s}),H(j,u,S,i,v),c.push(v.z)}return{elevations:c,drapedObjectIds:t,failedObjectIds:e}}const S=new A,f=O(0,0,0,D.WGS84),v=new B,j=[0,0,0];async function K(a,d,p){if(a==null||d.candidates.length===0)return x;const l=a.graphics3DGraphicsByObjectID??a.graphics3DGraphics,s=[],u=[],{renderer:i}=a,h=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?J():null,w=async(e,{graphic:t,graphics3DSymbol:o})=>{const n=await h,r=await a.getRenderingInfoAsync(t,i,n,{signal:p});return r==null?[]:o.queryForSnapping(e,m,r,p)},{candidates:g,spatialReference:m}=d;for(let e=0;e<g.length;++e){const t=g[e],{objectId:o}=t,n=typeof o=="number"?l==null?void 0:l.get(o):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(s.push(w(t,n)),u.push(e))}if(s.length===0)return x;const y=await Promise.all(s);z(p);const I=[],c=[];for(let e=0;e<y.length;++e){const t=y[e],o=u[e];for(const n of t)I.push(n),c.push(o)}return{candidates:I,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{k as c,K as r};
